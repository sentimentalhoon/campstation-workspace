# ================================
# CampStation - Development Environment Override
# ================================
# 로컬 개발 환경용 오버라이드 설정
# MinIO, MailHog 등의 개발용 서비스를 추가하고 프론트엔드는 선택적으로 실행
services:
  # ================================
  # Frontend (Next.js) - Development Mode
  # ================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      target: development
    container_name: ${COMPOSE_PROJECT_NAME:-campstation}-frontend-dev
    ports:
      - ${FRONTEND_PORT:-3000}:3000
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8080/api
      - BACKEND_URL=http://backend:8080
      - NEXT_PUBLIC_APP_NAME=${NEXT_PUBLIC_APP_NAME:-CampStation}
      - NEXT_PUBLIC_APP_VERSION=${NEXT_PUBLIC_APP_VERSION:-1.0.0}
      - NEXT_PUBLIC_KAKAO_MAP_API_KEY=14274277b7b930e3289085afa313c81c
    depends_on:
      backend:
        condition: service_started
      minio:
        condition: service_healthy
    networks:
      - campstation-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # ================================
  # Backend (Spring Boot) - Development Mode
  # ================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      target: development
    container_name: ${COMPOSE_PROJECT_NAME:-campstation}-backend-dev
    ports:
      - ${BACKEND_PORT:-8080}:8080
    volumes:
      - ./backend/src:/app/src
      - ./backend/build.gradle.kts:/app/build.gradle.kts
      - ./backend/settings.gradle.kts:/app/settings.gradle.kts
      - backend_logs:/app/logs
      - backend_uploads:/app/uploads
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SHOW_SQL=true
      - FORMAT_SQL=true
      - LOG_LEVEL=DEBUG
      - SECURITY_LOG_LEVEL=DEBUG
      - SQL_LOG_LEVEL=DEBUG
      - DB_URL=jdbc:h2:mem:campstation;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
      - DB_DRIVER=org.h2.Driver
      - DB_USERNAME=sa
      - DB_PASSWORD=
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=campstation- dev-secret-key-this-is-only-for-development-environment-please-change-in-production-must-be-at-least-64-bytes-long-hs512
      - JWT_EXPIRATION=3600000
      - JWT_REFRESH_EXPIRATION=604800000
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://frontend:3000
      - FILE_UPLOAD_PATH=s3://campstation-dev/
      - FILE_MAX_SIZE_BYTES=10485760
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=campstation2024
      - SERVER_PORT=8080
      - SERVER_ADDRESS=0.0.0.0
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,metrics,env,configprops
      - MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=when-authorized
      - AWS_ACCESS_KEY_ID=campstation
      - AWS_SECRET_ACCESS_KEY=campstation123
      - AWS_REGION=us-east-1
      - AWS_S3_BUCKET_NAME=campstation-dev
      - AWS_S3_ENDPOINT=http://minio:9000
      - AWS_S3_EXTERNAL_ENDPOINT=http://localhost:9000
    depends_on:
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      mailhog:
        condition: service_started
    networks:
      - campstation-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  # ================================
  # MinIO (S3 Compatible Storage)
  # ================================
  minio:
    image: minio/minio:latest
    container_name: ${COMPOSE_PROJECT_NAME:-campstation}-minio
    ports:
      - "9000:9000" # MinIO API
      - "9001:9001" # MinIO Console
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=campstation
      - MINIO_ROOT_PASSWORD=campstation123
      - MINIO_REGION=us-east-1
      - MINIO_DOMAIN=localhost
      - MINIO_API_REQUESTS_MAX=1000
      - MINIO_API_REQUESTS_DEADLINE=1m
      - MINIO_BROWSER_REDIRECT_URL=http://localhost:9001
    command: server /data --console-address ":9001" --address ":9000"
    networks:
      - campstation-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # ================================
  # MinIO Client (mc) - Bucket Setup
  # ================================
  minio-setup:
    image: minio/mc:latest
    container_name: ${COMPOSE_PROJECT_NAME:-campstation}-minio-setup
    depends_on:
      minio:
        condition: service_healthy
    networks:
      - campstation-network
    entrypoint: >
      /bin/sh -c "
        mc alias set campstation http://minio:9000 campstation campstation123 &&
        mc mb campstation/campstation-dev --ignore-existing &&
        mc anonymous set public campstation/campstation-dev &&
        echo 'MinIO bucket setup completed'
      "
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

  # ================================
  # MailHog (Email Testing)
  # ================================
  mailhog:
    image: mailhog/mailhog:latest
    container_name: ${COMPOSE_PROJECT_NAME:-campstation}-mailhog
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web UI
    networks:
      - campstation-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:8025",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

# ================================
# Volumes
# ================================
volumes:
  minio_data:
    driver: local

# ================================
# Networks
# ================================
networks:
  campstation-network:
    driver: bridge
