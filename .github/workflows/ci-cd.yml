name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Backend Tests and Build
  backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make gradlew executable
      run: chmod +x ./backend/gradlew

    - name: Run backend tests
      run: ./backend/gradlew test --no-daemon
      working-directory: backend

    - name: Build backend
      run: ./backend/gradlew build --no-daemon
      working-directory: backend

    - name: Upload backend build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-jar
        path: backend/build/libs/*.jar

  # Frontend Tests and Build
  frontend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      run: npm ci
      working-directory: frontend

    - name: Run frontend linting
      run: npm run lint
      working-directory: frontend

    - name: Run frontend tests
      run: npm test -- --coverage --watchAll=false
      working-directory: frontend

    - name: Build frontend
      run: npm run build
      working-directory: frontend

    - name: Upload frontend build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/.next

  # Docker Build and Push (only on main branch)
  docker:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download backend artifact
      uses: actions/download-artifact@v4
      with:
        name: backend-jar
        path: backend/build/libs/

    - name: Download frontend artifact
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: frontend/.next/

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/campstation-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/campstation-frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max