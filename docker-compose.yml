services:
  # ================================
  # Frontend Service (Next.js)
  # ================================
  frontend:
    build:
      context: ./frontend # 프론트엔드 소스 경로
      dockerfile: Dockerfile # 빌드에 사용할 Dockerfile
    container_name: campstation-frontend
    ports:
      - "3000:3000" # 호스트:컨테이너 포트 매핑
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080/api # 브라우저에서 접근할 API URL
      - NEXT_PUBLIC_APP_NAME=CampStation
      - NEXT_PUBLIC_APP_VERSION=1.0.0
      - NEXT_PUBLIC_KAKAO_MAP_API_KEY=14274277b7b930e3289085afa313c81c
    depends_on:
      - backend # 백엔드 서비스가 먼저 실행되어야 함
    networks:
      - campstation-network
    restart: unless-stopped # 컨테이너가 중단되면 자동 재시작

  # ================================
  # Backend Service (Spring Boot)
  # ================================
  backend:
    build:
      context: ./backend # 백엔드 소스 경로
      dockerfile: Dockerfile
    container_name: campstation-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker # Spring Boot 실행 프로파일
      - DB_URL=jdbc:postgresql://db:5432/campstation
      - DB_USERNAME=campstation
      - DB_PASSWORD=campstation2024
      - DB_DRIVER=org.postgresql.Driver
      - DDL_AUTO=update
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=campstation-development-secret-key-for-jwt-token-generation-must-be-at-least-64-bytes-long-hs512
      - FILE_UPLOAD_PATH=/app/uploads
    depends_on:
      redis:
        condition: service_started # Redis가 실행된 후 시작
      # db:
      #   condition: service_healthy   # DB 헬스체크 후 시작 (활성화 시)
    networks:
      - campstation-network
    restart: unless-stopped

  # ================================
  # Database Service (PostgreSQL)
  # (현재 주석 처리됨, 필요 시 활성화)
  # ================================
  # db:
  #   image: postgres:15-alpine
  #   container_name: campstation-db
  #   environment:
  #     POSTGRES_DB: campstation
  #     POSTGRES_USER: campstation
  #     POSTGRES_PASSWORD: campstation2024
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U campstation -d campstation"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     - campstation-network
  #   restart: unless-stopped

  # ================================
  # Cache Service (Redis)
  # ================================
  redis:
    image: redis:latest # 최신 Redis 이미지 사용
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data # Redis 데이터 영속화
    healthcheck:
      test: ["CMD", "redis-cli", "ping"] # Redis 상태 확인
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - campstation-network
    restart: unless-stopped

# ================================
# Volumes (데이터 영속화)
# ================================
volumes:
  postgres_data: # PostgreSQL 데이터 저장소
  redis_data: # Redis 데이터 저장소

# ================================
# Networks (서비스 간 통신)
# ================================
networks:
  campstation-network:
    driver: bridge # 기본 브리지 네트워크
